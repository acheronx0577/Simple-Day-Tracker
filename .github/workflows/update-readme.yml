name: 📚 Update README with Daily Fact

on:
  schedule:
    - cron: "0 16 * * *"
  workflow_dispatch:

jobs:
  update-readme:
    name: 🗓️ Update Daily Fact
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout repository
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || github.token }}
          fetch-depth: 0

      # Step 2: Setup Git configuration
      - name: ⚙️ Setup Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase false

      # Step 3: Sync with remote
      - name: 🔄 Sync with Remote
        run: |
          echo "🔄 Pulling latest changes from remote..."
          git pull origin main
          echo "✅ Successfully synced with remote"

      # Step 4: Get current date information
      - name: 📅 Get Current Date
        id: date
        run: |
          echo "date_slash=$(date +'%m/%d')" >> $GITHUB_OUTPUT
          echo "date_display=$(date +'%B %d')" >> $GITHUB_OUTPUT
          echo "iso_date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "weekday=$(date +'%A')" >> $GITHUB_OUTPUT
          echo "day_num=$(date +'%d' | sed 's/^0//')" >> $GITHUB_OUTPUT
          echo "month_num=$(date +'%m' | sed 's/^0//')" >> $GITHUB_OUTPUT

      # Step 5: Fetch daily fact from multiple sources
      - name: 🌐 Fetch Daily Fact
        id: fact
        run: |
          set +e
          echo "🎯 Fetching fact for: ${{ steps.date.outputs.date_display }}"
          
          # Source 1: Try Numbers API with different formats
          echo "🔍 Attempt 1: Numbers API..."
          FACT=$(curl -s --max-time 10 "http://numbersapi.com/${{ steps.date.outputs.date_slash }}/date" | head -c 200)
          
          if [ -n "$FACT" ] && [[ ! "$FACT" =~ "does not exist" ]] && [[ ! "$FACT" =~ "Not Found" ]] && [[ ! "$FACT" =~ "null" ]]; then
            echo "✅ Success with Numbers API"
          else
            # Source 2: Try History API (historical events)
            echo "🔍 Attempt 2: Historical Events API..."
            FACT=$(curl -s --max-time 10 "https://history.muffinlabs.com/date/${{ steps.date.outputs.month_num }}/${{ steps.date.outputs.day_num }}" | jq -r '.data.Events[0].text // empty' 2>/dev/null | head -c 150)
            
            if [ -n "$FACT" ] && [ "$FACT" != "null" ]; then
              echo "✅ Success with History API"
            else
              # Source 3: Try On This Day API
              echo "🔍 Attempt 3: On This Day API..."
              FACT=$(curl -s --max-time 10 "https://byabbe.se/on-this-day/${{ steps.date.outputs.month_num }}/${{ steps.date.outputs.day_num }}/events.json" | jq -r '.events[0].description // empty' 2>/dev/null | head -c 150)
              
              if [ -n "$FACT" ] && [ "$FACT" != "null" ]; then
                echo "✅ Success with On This Day API"
              else
                # Source 4: Create intelligent fallback based on date
                echo "🔍 Attempt 4: Intelligent fallback..."
                DAY=$(( ${{ steps.date.outputs.day_num }} ))
                MONTH=$(( ${{ steps.date.outputs.month_num }} ))
                
                # Array of interesting historical facts by month
                MONTH_FACTS=(
                  "January: New beginnings and winter innovations"
                  "February: Love, presidents, and groundhogs shape history" 
                  "March: Spring arrivals and historical revolutions"
                  "April: Showers bring May flowers and major discoveries"
                  "May: Flowers bloom as civilizations reach new heights"
                  "June: Summer solstice marks periods of great exploration"
                  "July: Independence and freedom movements throughout history"
                  "August: Hot summer days witness groundbreaking inventions"
                  "September: Autumn beginnings and educational milestones"
                  "October: Fall colors backdrop historical transformations"
                  "November: Harvest time and remembrance of great leaders"
                  "December: Winter celebrations and year-end breakthroughs"
                )
                
                # Array of daily inspirational facts
                DAILY_FACTS=(
                  "On this day in history, innovation and progress continued to shape our world."
                  "Throughout history, days like today have witnessed remarkable human achievements."
                  "This date has been a canvas for scientific discoveries and cultural milestones."
                  "Historical events on this day remind us of humanity's endless potential."
                  "Great minds and bold actions have marked this date throughout the centuries."
                  "From ancient times to modern days, this date echoes with human accomplishment."
                  "Every day in history, including today, contributes to our collective story."
                  "The pages of history turn daily, each date writing new chapters of progress."
                )
                
                # Create a deterministic but varied fact based on date
                FACT_INDEX=$(( (DAY * MONTH) % ${#DAILY_FACTS[@]} ))
                MONTH_FACT="${MONTH_FACTS[$((MONTH-1))]}"
                DAILY_FACT="${DAILY_FACTS[$FACT_INDEX]}"
                
                FACT="On ${{ steps.date.outputs.date_display }}, $DAILY_FACT $MONTH_FACT."
                echo "✅ Using intelligent fallback fact"
              fi
            fi
          fi
          
          # Clean the fact
          FACT=$(echo "$FACT" | tr -d '\r' | sed 's/^"//' | sed 's/"$//' | sed 's/\\//g')
          echo "📖 Final Fact: $FACT"
          
          # Escape for sed
          ESCAPED_FACT=$(printf '%s' "$FACT" | sed 's/[\/&]/\\&/g')
          echo "fact=$FACT" >> $GITHUB_OUTPUT
          echo "escaped_fact=$ESCAPED_FACT" >> $GITHUB_OUTPUT

      # Step 6: Update README file
      - name: 📝 Update README
        run: |
          echo "🔄 Updating README.md..."
          
          # Create backup
          cp README.md README.md.backup
          
          # Update the daily fact section
          if sed -i "s|<!-- DAILY_FACT -->.*|<!-- DAILY_FACT -->\n\`\`\`plaintext\n📌 Daily Fact: ${{ steps.fact.outputs.fact }}\n\`\`\`|" README.md; then
            echo "✅ README updated successfully"
            echo "📊 Change preview:"
            git diff README.md | head -5 || true
          else
            echo "❌ Failed to update README, restoring backup"
            mv README.md.backup README.md
            exit 1
          fi
          
          rm README.md.backup

      # Step 7: Commit and push changes
      - name: 🚀 Commit and Push Changes
        run: |
          echo "📦 Staging changes..."
          git add README.md
          
          if git diff --staged --quiet; then
            echo "✅ No changes to commit"
          else
            echo "💾 Committing changes..."
            git commit -m "📚 Update daily fact for ${{ steps.date.outputs.iso_date }}"
            
            echo "📤 Pushing to repository..."
            git fetch origin
            git merge origin/main --no-edit -m "Merge remote changes"
            git push origin main
            
            echo "🎉 Successfully updated daily fact!"
          fi

      # Step 8: Summary
      - name: 📋 Summary
        if: always()
        run: |
          echo " "
          echo "🏁 WORKFLOW SUMMARY"
          echo "===================="
          echo "📅 Date: ${{ steps.date.outputs.date_display }}"
          echo "📖 Fact: ${{ steps.fact.outputs.fact }}"
          echo "🕒 Time: $(date -u +'%H:%M:%S UTC')"
          echo "✅ Status: ${{ job.status }}"
          echo " "
